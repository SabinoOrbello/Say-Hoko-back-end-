// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Say_Hoko.Models;

#nullable disable

namespace Say_Hoko.Migrations
{
    [DbContext(typeof(SushiContext))]
    partial class SushiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Say_Hoko.Models.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategorieID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategorieId"));

                    b.Property<string>("NomeCategoria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategorieId")
                        .HasName("PK__Categori__F643AD86DC6C7253");

                    b.ToTable("Categorie", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.DettagliOrdine", b =>
                {
                    b.Property<int>("DettagliOrdineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DettagliOrdineID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DettagliOrdineId"));

                    b.Property<int?>("OrdiniId")
                        .HasColumnType("int")
                        .HasColumnName("OrdiniID");

                    b.Property<decimal?>("Prezzo")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProdottoId")
                        .HasColumnType("int")
                        .HasColumnName("ProdottoID");

                    b.Property<int?>("Quantità")
                        .HasColumnType("int");

                    b.HasKey("DettagliOrdineId")
                        .HasName("PK__Dettagli__404742920D0202CE");

                    b.HasIndex("OrdiniId");

                    b.HasIndex("ProdottoId");

                    b.ToTable("DettagliOrdine", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.MetodiConsegna", b =>
                {
                    b.Property<int>("MetodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MetodoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetodoId"));

                    b.Property<string>("Cap")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CAP");

                    b.Property<string>("Citta")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Indirizzo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("MetodoId")
                        .HasName("PK__MetodiCo__5C1E3E310B3CD614");

                    b.HasIndex("UserId");

                    b.ToTable("MetodiConsegna", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.Ordini", b =>
                {
                    b.Property<int>("OrdiniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrdiniID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdiniId"));

                    b.Property<string>("Citta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataOra")
                        .HasColumnType("datetime");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Totale")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrdiniId")
                        .HasName("PK__Ordini__FE9A1F650C9ED873");

                    b.HasIndex("UserId");

                    b.ToTable("Ordini", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.Pagamenti", b =>
                {
                    b.Property<int>("PagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PagamentoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagamentoId"));

                    b.Property<DateTime?>("DataOra")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Importo")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Metodo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OrdiniId")
                        .HasColumnType("int")
                        .HasColumnName("OrdiniID");

                    b.Property<string>("Stato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PagamentoId")
                        .HasName("PK__Pagament__977DE7D3CF5F9C99");

                    b.HasIndex("OrdiniId");

                    b.HasIndex("UserId");

                    b.ToTable("Pagamenti", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.Prodotti", b =>
                {
                    b.Property<int>("ProdottoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProdottoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdottoId"));

                    b.Property<string>("Allergeni1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Allergeni2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Allergeni3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("int")
                        .HasColumnName("CategorieID");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Disponibilità")
                        .HasColumnType("bit");

                    b.Property<string>("Immagine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredienti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Prezzo")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ProdottoId")
                        .HasName("PK__Prodotti__9BE523B8E56CD97B");

                    b.HasIndex("CategorieId");

                    b.ToTable("Prodotti", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE3A0F3274FB");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.Utenti", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Cognome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Utenti__1788CCAC03F5C83E");

                    b.ToTable("Utenti", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.UtentiRuolo", b =>
                {
                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UtentiRuolo", (string)null);
                });

            modelBuilder.Entity("Say_Hoko.Models.DettagliOrdine", b =>
                {
                    b.HasOne("Say_Hoko.Models.Ordini", "Ordini")
                        .WithMany("DettagliOrdines")
                        .HasForeignKey("OrdiniId")
                        .HasConstraintName("FK__DettagliO__Ordin__412EB0B6");

                    b.HasOne("Say_Hoko.Models.Prodotti", "Prodotto")
                        .WithMany("DettagliOrdines")
                        .HasForeignKey("ProdottoId")
                        .HasConstraintName("FK__DettagliO__Prodo__4222D4EF");

                    b.Navigation("Ordini");

                    b.Navigation("Prodotto");
                });

            modelBuilder.Entity("Say_Hoko.Models.MetodiConsegna", b =>
                {
                    b.HasOne("Say_Hoko.Models.Utenti", "User")
                        .WithMany("MetodiConsegnas")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__MetodiCon__UserI__49C3F6B7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Say_Hoko.Models.Ordini", b =>
                {
                    b.HasOne("Say_Hoko.Models.Utenti", "User")
                        .WithMany("Ordinis")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Ordini__UserID__3E52440B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Say_Hoko.Models.Pagamenti", b =>
                {
                    b.HasOne("Say_Hoko.Models.Ordini", "Ordini")
                        .WithMany("Pagamentis")
                        .HasForeignKey("OrdiniId")
                        .HasConstraintName("FK__Pagamenti__Ordin__4D94879B");

                    b.HasOne("Say_Hoko.Models.Utenti", "User")
                        .WithMany("Pagamentis")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Pagamenti__UserI__4CA06362");

                    b.Navigation("Ordini");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Say_Hoko.Models.Prodotti", b =>
                {
                    b.HasOne("Say_Hoko.Models.Categorie", "Categorie")
                        .WithMany("Prodottis")
                        .HasForeignKey("CategorieId")
                        .HasConstraintName("FK__Prodotti__Catego__3B75D760");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Say_Hoko.Models.UtentiRuolo", b =>
                {
                    b.HasOne("Say_Hoko.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UtentiRuo__RoleI__46E78A0C");

                    b.HasOne("Say_Hoko.Models.Utenti", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UtentiRuo__UserI__45F365D3");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Say_Hoko.Models.Categorie", b =>
                {
                    b.Navigation("Prodottis");
                });

            modelBuilder.Entity("Say_Hoko.Models.Ordini", b =>
                {
                    b.Navigation("DettagliOrdines");

                    b.Navigation("Pagamentis");
                });

            modelBuilder.Entity("Say_Hoko.Models.Prodotti", b =>
                {
                    b.Navigation("DettagliOrdines");
                });

            modelBuilder.Entity("Say_Hoko.Models.Utenti", b =>
                {
                    b.Navigation("MetodiConsegnas");

                    b.Navigation("Ordinis");

                    b.Navigation("Pagamentis");
                });
#pragma warning restore 612, 618
        }
    }
}
